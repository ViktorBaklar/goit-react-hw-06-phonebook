{"version":3,"sources":["components/UI/container/container.module.css","components/UI/Section/section.module.css","components/contactForm/contactForm.module.css","components/UI/input/input.module.css","components/UI/button/button.module.css","components/contactItem/contactItem.module.css","components/contactList/contactList.module.css","components/filter/filter.module.css","redux/phonebook/phonebookActions.js","redux/phonebook/phonebookReducer.js","redux/store.js","components/UI/container/index.jsx","components/UI/Section/index.jsx","components/UI/input/index.jsx","components/UI/button/index.jsx","components/contactForm/index.jsx","components/contactItem/index.jsx","components/contactList/index.jsx","components/filter/index.jsx","App.js","index.js"],"names":["module","exports","addContact","createAction","name","number","payload","id","shortid","generate","deleteContact","changeFilter","items","createReducer","phonebookActions","state","filter","_","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","contactsPersistConfig","key","storage","blacklist","store","configureStore","reducer","contacts","persistReducer","phonebookReducer","devTools","process","persistor","persistStore","Container","children","className","style","container","Section","title","section","Input","type","value","placeHolder","onChange","restProps","classList","input","join","placeholder","required","Button","onClick","button","ContactForm","handleChange","event","currentTarget","setState","handleSubmit","getState","preventDefault","some","contact","alert","props","onSubmit","reset","contactForm","this","htmlFor","pattern","Component","connect","dispatch","ContactItem","onDelete","contactItem","getFilteredContacts","allContacts","toLowerCase","includes","contactList","map","target","App","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.3a7c0631.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"container_container__YV8BX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"section_section__3R62r\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactForm\":\"contactForm_contactForm__3iZS_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"input_input__1WTmp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"button_button__ris09\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactItem\":\"contactItem_contactItem__2QYf4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"contactList_contactList__25otL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"filter_filter__3HgB7\"};","// import uniqueId from 'lodash/uniqueId';\r\nimport { createAction } from '@reduxjs/toolkit';\r\nimport shortid from 'shortid';\r\n\r\nconst addContact = createAction('contacts/add', (name, number) => ({\r\n  payload: {\r\n    // id: uniqueId(\"id-\"),\r\n    id: shortid.generate(),\r\n    name,\r\n    number,\r\n  },\r\n}));\r\n\r\nconst deleteContact = createAction('contacts/delete');\r\n\r\nconst changeFilter = createAction('contacts/changeFilter');\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default { addContact, deleteContact, changeFilter };","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\n\r\nimport phonebookActions from './phonebookActions';\r\n\r\nconst items = createReducer([], {\r\n  [phonebookActions.addContact]: (state, { payload }) => [...state, payload],\r\n  [phonebookActions.deleteContact]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [phonebookActions.changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n});","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport logger from 'redux-logger';\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport phonebookReducer from './phonebook/phonebookReducer';\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n  logger,\r\n];\r\n\r\nconst contactsPersistConfig = {\r\n  key: 'contacts',\r\n  storage,\r\n  blacklist: ['filter'],\r\n};\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: persistReducer(contactsPersistConfig, phonebookReducer),\r\n  },\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nconst persistor = persistStore(store);\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default { store, persistor };","import style from './container.module.css'\r\n\r\nconst Container = ({ children }) => <div className={style.container}>{children}</div>;\r\n\r\nexport default Container;","import style from './section.module.css'\r\n\r\nconst Section = ({ title, children }) => (\r\n  <div className={style.section}>\r\n    <h2>{title}</h2>\r\n    {children}\r\n  </div>\r\n)\r\n\r\nexport default Section;","\r\nimport style from './input.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Input = ({\r\n  type = 'text',\r\n  id,\r\n  value,\r\n  className,\r\n  placeHolder,\r\n  name,\r\n  onChange,\r\n  ...restProps\r\n}) => {\r\n  const classList = [style.input, className].join(' ');\r\n\r\n  return (\r\n    <input\r\n      {...restProps}\r\n      id={id}\r\n      type={type}\r\n      value={value}\r\n      name={name}\r\n      className={classList}\r\n      placeholder={placeHolder}\r\n      onChange={onChange}\r\n      required\r\n    />\r\n  );\r\n};\r\n\r\nInput.propTypes = {\r\n  type: PropTypes.string,\r\n  value: PropTypes.string,\r\n  className: PropTypes.string,\r\n  name: PropTypes.string,\r\n  placeHolder: PropTypes.string,\r\n  onInput: PropTypes.func,\r\n};\r\n\r\nexport default Input;","import style from './button.module.css';\r\n\r\nconst Button = ({\r\n  className,\r\n  children,\r\n  type,\r\n  onClick,\r\n}) => {\r\n  const classList = [style.button, className].join(' ');\r\n\r\n  return (\r\n    <button\r\n      className={classList}\r\n      type={type}\r\n      onClick={onClick}\r\n    >\r\n      {children}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Button;","import { Component } from \"react\"\r\nimport { connect } from 'react-redux';\r\nimport phonebookActions from '../../redux/phonebook/phonebookActions'\r\nimport store from '../../redux/store';\r\nimport style from './contactForm.module.css'\r\nimport Input from '../UI/input'\r\nimport Button from '../UI/button'\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  handleChange = event => {\r\n    const { name, value } = event.currentTarget;\r\n    this.setState(() => ({ [name]: value }));\r\n  };\r\n\r\n  handleSubmit = event => {\r\n    const { name, number } = this.state\r\n    const contacts = store.store.getState().contacts.items\r\n    event.preventDefault();\r\n    if (contacts.some(contact => contact.name === name)) {\r\n      alert(`${name} is already in contacts.`);\r\n      return;\r\n    }\r\n    this.props.onSubmit(name, number);\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({ name: '', number: '' });\r\n  };\r\n\r\n  render() {\r\n\r\n    return (\r\n      <form className={style.contactForm} onSubmit={this.handleSubmit}>\r\n        <label htmlFor=\"name\">Name</label>\r\n        <Input type=\"text\" name=\"name\" value={this.state.name} onChange={this.handleChange} pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\" />\r\n        <label htmlFor=\"number\">Number</label>\r\n        <Input type=\"tel\" name=\"number\" value={this.state.number} onChange={this.handleChange} pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\" />\r\n        <Button type=\"submit\">Add contact</Button>\r\n\r\n      </form>\r\n    );\r\n\r\n  };\r\n\r\n}\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onSubmit: (name, number) => dispatch(phonebookActions.addContact(name, number))\r\n  }\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(ContactForm);","import PropTypes from 'prop-types'\r\nimport Button from '../UI/button'\r\nimport style from './contactItem.module.css'\r\n\r\n\r\nconst ContactItem = ({ id, name, number, onDelete }) => {\r\n  return (\r\n    <li className={style.contactItem}>\r\n      <div>\r\n        <span>{name}: </span>\r\n        <span>{number}</span>\r\n      </div>\r\n      <Button\r\n        type=\"button\"\r\n        onClick={() => onDelete(id)}\r\n      >\r\n        Delete\r\n\t\t\t</Button>\r\n    </li>\r\n  );\r\n}\r\n\r\nexport default ContactItem;\r\n\r\nContactItem.propTypes = {\r\n  id: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string.isRequired,\r\n}","import { connect } from 'react-redux'\r\nimport ContactItem from '../contactItem'\r\nimport phonebookActions from '../../redux/phonebook/phonebookActions'\r\nimport style from './contactList.module.css'\r\n\r\nconst ContactList = ({ contacts, onDelete }) => (\r\n  <ul className={style.contactList}>\r\n    {\r\n      contacts.map(({ id, name, number }) => (\r\n        <ContactItem\r\n          key={id}\r\n          id={id}\r\n          name={name}\r\n          number={number}\r\n          onDelete={onDelete}\r\n        />\r\n      ))\r\n    }\r\n  </ul >\r\n)\r\n\r\nconst getFilteredContacts = (allContacts, filter) => {\r\n  return allContacts.filter(contact =>\r\n    contact.name.toLowerCase().includes(filter.toLowerCase()),\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ contacts: { items, filter } }) => ({\r\n  contacts: getFilteredContacts(items, filter)\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onDelete: (id) => dispatch(phonebookActions.deleteContact(id))\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);","import { connect } from 'react-redux';\r\nimport phonebookActions from '../../redux/phonebook/phonebookActions'\r\nimport style from './filter.module.css'\r\nimport Input from '../UI/input'\r\n\r\nconst Filter = ({ filter, onChange }) => (\r\n  <form className={style.filter}>\r\n    <label htmlFor=\"filter\">Find contacts by name</label>\r\n    <Input type=\"text\" name=\"filter\" value={filter} onChange={onChange} />\r\n  </form>\r\n)\r\n\r\nconst mapStateToProps = state => ({\r\n  filter: state.contacts.filter\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onChange: (event) => dispatch(phonebookActions.changeFilter(event.target.value))\r\n})\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);","import React from 'react';\nimport './App.css';\nimport Container from './components/UI/container'\nimport Section from './components/UI/Section'\nimport ContactForm from './components/contactForm'\nimport ContactList from './components/contactList'\nimport Filter from './components/filter'\n\nconst App = () => (\n  <div className=\"App\" >\n    <Container>\n      <Section title='Phonebook'>\n        <ContactForm />\n      </Section>\n      <Section title='Contacts'>\n        <Filter />\n        <ContactList />\n      </Section>\n    </Container>\n\n  </div>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport store from './redux/store';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}